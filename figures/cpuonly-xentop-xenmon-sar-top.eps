%!PS-Adobe-2.0 EPSF-2.0
%%Title: cpuonly.srno-xentop-xenmon-sar-top.eps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Wed Sep  8 23:55:05 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 320 138
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (cpuonly.srno-xentop-xenmon-sar-top.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (sujesha,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Sep  8 23:55:05 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
714 420 M
4448 0 V
stroke
LTb
714 420 M
63 0 V
4385 0 R
-63 0 V
630 420 M
( 0) Rshow
1.000 UL
LTb
1.000 UL
LTa
714 634 M
4448 0 V
stroke
LTb
714 634 M
63 0 V
4385 0 R
-63 0 V
630 634 M
( 20) Rshow
1.000 UL
LTb
1.000 UL
LTa
714 848 M
4448 0 V
stroke
LTb
714 848 M
63 0 V
4385 0 R
-63 0 V
630 848 M
( 40) Rshow
1.000 UL
LTb
1.000 UL
LTa
714 1061 M
2705 0 V
1659 0 R
84 0 V
stroke
LTb
714 1061 M
63 0 V
4385 0 R
-63 0 V
-4469 0 R
( 60) Rshow
1.000 UL
LTb
1.000 UL
LTa
714 1275 M
2705 0 V
1659 0 R
84 0 V
stroke
LTb
714 1275 M
63 0 V
4385 0 R
-63 0 V
-4469 0 R
( 80) Rshow
1.000 UL
LTb
1.000 UL
LTa
714 1489 M
2705 0 V
1659 0 R
84 0 V
stroke
LTb
714 1489 M
63 0 V
4385 0 R
-63 0 V
-4469 0 R
( 100) Rshow
1.000 UL
LTb
1.000 UL
LTa
714 420 M
0 1176 V
stroke
LTb
714 420 M
0 63 V
0 1113 R
0 -63 V
714 280 M
( 0) Cshow
1.000 UL
LTb
1.000 UL
LTa
1011 420 M
0 1176 V
stroke
LTb
1011 420 M
0 63 V
0 1113 R
0 -63 V
0 -1253 R
( 2) Cshow
1.000 UL
LTb
1.000 UL
LTa
1307 420 M
0 1176 V
stroke
LTb
1307 420 M
0 63 V
0 1113 R
0 -63 V
0 -1253 R
( 4) Cshow
1.000 UL
LTb
1.000 UL
LTa
1604 420 M
0 1176 V
stroke
LTb
1604 420 M
0 63 V
0 1113 R
0 -63 V
0 -1253 R
( 6) Cshow
1.000 UL
LTb
1.000 UL
LTa
1900 420 M
0 1176 V
stroke
LTb
1900 420 M
0 63 V
0 1113 R
0 -63 V
0 -1253 R
( 8) Cshow
1.000 UL
LTb
1.000 UL
LTa
2197 420 M
0 1176 V
stroke
LTb
2197 420 M
0 63 V
0 1113 R
0 -63 V
0 -1253 R
( 10) Cshow
1.000 UL
LTb
1.000 UL
LTa
2493 420 M
0 1176 V
stroke
LTb
2493 420 M
0 63 V
0 1113 R
0 -63 V
0 -1253 R
( 12) Cshow
1.000 UL
LTb
1.000 UL
LTa
2790 420 M
0 1176 V
stroke
LTb
2790 420 M
0 63 V
0 1113 R
0 -63 V
0 -1253 R
( 14) Cshow
1.000 UL
LTb
1.000 UL
LTa
3086 420 M
0 1176 V
stroke
LTb
3086 420 M
0 63 V
0 1113 R
0 -63 V
0 -1253 R
( 16) Cshow
1.000 UL
LTb
1.000 UL
LTa
3383 420 M
0 1176 V
stroke
LTb
3383 420 M
0 63 V
0 1113 R
0 -63 V
0 -1253 R
( 18) Cshow
1.000 UL
LTb
1.000 UL
LTa
3679 420 M
0 553 V
0 560 R
0 63 V
stroke
LTb
3679 420 M
0 63 V
0 1113 R
0 -63 V
0 -1253 R
( 20) Cshow
1.000 UL
LTb
1.000 UL
LTa
3976 420 M
0 553 V
0 560 R
0 63 V
stroke
LTb
3976 420 M
0 63 V
0 1113 R
0 -63 V
0 -1253 R
( 22) Cshow
1.000 UL
LTb
1.000 UL
LTa
4272 420 M
0 553 V
0 560 R
0 63 V
stroke
LTb
4272 420 M
0 63 V
0 1113 R
0 -63 V
0 -1253 R
( 24) Cshow
1.000 UL
LTb
1.000 UL
LTa
4569 420 M
0 553 V
0 560 R
0 63 V
stroke
LTb
4569 420 M
0 63 V
0 1113 R
0 -63 V
0 -1253 R
( 26) Cshow
1.000 UL
LTb
1.000 UL
LTa
4865 420 M
0 553 V
0 560 R
0 63 V
stroke
LTb
4865 420 M
0 63 V
0 1113 R
0 -63 V
0 -1253 R
( 28) Cshow
1.000 UL
LTb
1.000 UL
LTa
5162 420 M
0 1176 V
stroke
LTb
5162 420 M
0 63 V
0 1113 R
0 -63 V
0 -1253 R
( 30) Cshow
1.000 UL
LTb
1.000 UL
LTb
714 1596 N
714 420 L
4448 0 V
0 1176 V
-4448 0 V
Z stroke
LCb setrgbcolor
140 1008 M
currentpoint gsave translate 90 rotate 0 0 M
(CPU \(%\)) Cshow
grestore
LTb
LCb setrgbcolor
2938 70 M
(Expt serial number) Cshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
4511 1463 M
(xentop report) Rshow
LT0
4595 1463 M
399 0 V
862 1397 M
149 0 V
148 0 V
148 -87 V
148 0 V
149 0 V
148 -97 V
148 -1 V
148 1 V
149 -116 V
148 0 V
148 0 V
148 -78 V
149 -1 V
148 0 V
3383 914 L
148 -7 V
148 -13 V
3828 786 L
148 -1 V
148 0 V
148 -98 V
149 0 V
148 0 V
4717 555 L
148 0 V
149 0 V
862 1397 Pls
1011 1397 Pls
1159 1397 Pls
1307 1310 Pls
1455 1310 Pls
1604 1310 Pls
1752 1213 Pls
1900 1212 Pls
2048 1213 Pls
2197 1097 Pls
2345 1097 Pls
2493 1097 Pls
2641 1019 Pls
2790 1018 Pls
2938 1018 Pls
3383 914 Pls
3531 907 Pls
3679 894 Pls
3828 786 Pls
3976 785 Pls
4124 785 Pls
4272 687 Pls
4421 687 Pls
4569 687 Pls
4717 555 Pls
4865 555 Pls
5014 555 Pls
4794 1463 Pls
1.000 UP
1.000 UL
LT1
LTb
4511 1323 M
(xenmon report) Rshow
LT1
4595 1323 M
399 0 V
862 1393 M
149 -2 V
148 -1 V
148 -85 V
148 -2 V
149 0 V
148 -106 V
148 0 V
148 0 V
149 -98 V
148 1 V
148 0 V
148 -100 V
149 0 V
148 1 V
3383 892 L
148 0 V
148 0 V
3828 783 L
148 2 V
148 0 V
4272 662 L
149 -2 V
148 -5 V
4717 553 L
148 -1 V
149 2 V
862 1393 Crs
1011 1391 Crs
1159 1390 Crs
1307 1305 Crs
1455 1303 Crs
1604 1303 Crs
1752 1197 Crs
1900 1197 Crs
2048 1197 Crs
2197 1099 Crs
2345 1100 Crs
2493 1100 Crs
2641 1000 Crs
2790 1000 Crs
2938 1001 Crs
3383 892 Crs
3531 892 Crs
3679 892 Crs
3828 783 Crs
3976 785 Crs
4124 785 Crs
4272 662 Crs
4421 660 Crs
4569 655 Crs
4717 553 Crs
4865 552 Crs
5014 554 Crs
4794 1323 Crs
1.000 UP
1.000 UL
LT2
LTb
4511 1183 M
(sar report) Rshow
LT2
4595 1183 M
399 0 V
862 1395 M
149 0 V
148 -1 V
148 -90 V
148 0 V
149 0 V
148 -97 V
148 1 V
148 -1 V
149 -99 V
148 0 V
148 0 V
148 -106 V
149 0 V
148 0 V
3383 897 L
148 0 V
148 0 V
3828 782 L
148 0 V
148 0 V
4272 667 L
149 -1 V
148 1 V
4717 545 L
148 1 V
149 0 V
862 1395 Star
1011 1395 Star
1159 1394 Star
1307 1304 Star
1455 1304 Star
1604 1304 Star
1752 1207 Star
1900 1208 Star
2048 1207 Star
2197 1108 Star
2345 1108 Star
2493 1108 Star
2641 1002 Star
2790 1002 Star
2938 1002 Star
3383 897 Star
3531 897 Star
3679 897 Star
3828 782 Star
3976 782 Star
4124 782 Star
4272 667 Star
4421 666 Star
4569 667 Star
4717 545 Star
4865 546 Star
5014 546 Star
4794 1183 Star
1.000 UP
1.000 UL
LT3
LTb
4511 1043 M
(top report) Rshow
LT3
4595 1043 M
399 0 V
862 1382 M
149 0 V
148 0 V
148 -91 V
148 0 V
149 0 V
148 -100 V
148 1 V
148 0 V
149 -94 V
148 1 V
148 -1 V
2641 997 L
149 -1 V
148 0 V
3383 887 L
148 0 V
148 0 V
3828 780 L
148 0 V
148 0 V
4272 662 L
149 1 V
148 0 V
4717 545 L
148 0 V
149 0 V
862 1382 Box
1011 1382 Box
1159 1382 Box
1307 1291 Box
1455 1291 Box
1604 1291 Box
1752 1191 Box
1900 1192 Box
2048 1192 Box
2197 1098 Box
2345 1099 Box
2493 1098 Box
2641 997 Box
2790 996 Box
2938 996 Box
3383 887 Box
3531 887 Box
3679 887 Box
3828 780 Box
3976 780 Box
4124 780 Box
4272 662 Box
4421 663 Box
4569 663 Box
4717 545 Box
4865 545 Box
5014 545 Box
4794 1043 Box
1.000 UL
LTb
714 1596 N
714 420 L
4448 0 V
0 1176 V
-4448 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
