%!PS-Adobe-2.0 EPSF-2.0
%%Title: fwd_3tier_dom0_cdf.eps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Fri Nov 23 12:22:35 2012
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 320 239
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (fwd_3tier_dom0_cdf.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (sujesha,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Nov 23 12:22:35 2012)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 220 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
1122 660 M
3904 0 V
stroke
LTb
1122 660 M
63 0 V
3841 0 R
-63 0 V
990 660 M
( 0) Rshow
1.000 UL
LTb
1.000 UL
LTa
1122 1231 M
3904 0 V
stroke
LTb
1122 1231 M
63 0 V
3841 0 R
-63 0 V
-3973 0 R
( 0.2) Rshow
1.000 UL
LTb
1.000 UL
LTa
1122 1802 M
3904 0 V
stroke
LTb
1122 1802 M
63 0 V
3841 0 R
-63 0 V
-3973 0 R
( 0.4) Rshow
1.000 UL
LTb
1.000 UL
LTa
1122 2374 M
3904 0 V
stroke
LTb
1122 2374 M
63 0 V
3841 0 R
-63 0 V
-3973 0 R
( 0.6) Rshow
1.000 UL
LTb
1.000 UL
LTa
1122 2945 M
3904 0 V
stroke
LTb
1122 2945 M
63 0 V
3841 0 R
-63 0 V
-3973 0 R
( 0.8) Rshow
1.000 UL
LTb
1.000 UL
LTa
1122 3516 M
3904 0 V
stroke
LTb
1122 3516 M
63 0 V
3841 0 R
-63 0 V
-3973 0 R
( 1) Rshow
1.000 UL
LTb
1.000 UL
LTa
1122 660 M
0 2856 V
stroke
LTb
1122 660 M
0 63 V
0 2793 R
0 -63 V
0 -3013 R
( 0) Cshow
1.000 UL
LTb
1.000 UL
LTa
1773 660 M
0 2856 V
stroke
LTb
1773 660 M
0 63 V
0 2793 R
0 -63 V
0 -3013 R
( 0.25) Cshow
1.000 UL
LTb
1.000 UL
LTa
2423 660 M
0 2856 V
stroke
LTb
2423 660 M
0 63 V
0 2793 R
0 -63 V
0 -3013 R
( 0.5) Cshow
1.000 UL
LTb
1.000 UL
LTa
3074 660 M
0 63 V
0 440 R
0 2353 V
stroke
LTb
3074 660 M
0 63 V
0 2793 R
0 -63 V
0 -3013 R
( 0.75) Cshow
1.000 UL
LTb
1.000 UL
LTa
3725 660 M
0 63 V
0 440 R
0 2353 V
stroke
LTb
3725 660 M
0 63 V
0 2793 R
0 -63 V
0 -3013 R
( 1) Cshow
1.000 UL
LTb
1.000 UL
LTa
4375 660 M
0 63 V
0 440 R
0 2353 V
stroke
LTb
4375 660 M
0 63 V
0 2793 R
0 -63 V
0 -3013 R
( 1.25) Cshow
1.000 UL
LTb
1.000 UL
LTa
5026 660 M
0 2856 V
stroke
LTb
5026 660 M
0 63 V
0 2793 R
0 -63 V
0 -3013 R
( 1.5) Cshow
1.000 UL
LTb
1.000 UL
LTb
1122 3516 N
0 -2856 V
3904 0 V
0 2856 V
-3904 0 V
Z stroke
LCb setrgbcolor
220 2088 M
currentpoint gsave translate 90 rotate 0 0 M
(Cumulative Probability) Cshow
grestore
LTb
LCb setrgbcolor
3074 110 M
(Dom0 Prediction error \(% CPU utilization\)) Cshow
LTb
1.000 UP
1.000 UL
LTb
4.000 UL
LT6
LTb
4039 1053 M
(C1 to C2) Rshow
LT6
4171 1053 M
591 0 V
1202 688 M
13 28 V
73 28 V
61 28 V
4 28 V
32 28 V
0 28 V
7 28 V
8 28 V
19 28 V
38 28 V
30 28 V
55 28 V
59 28 V
0 28 V
43 28 V
44 28 V
23 28 V
8 28 V
60 28 V
13 28 V
11 28 V
50 28 V
32 28 V
15 28 V
31 28 V
0 28 V
12 28 V
13 28 V
23 28 V
17 28 V
0 28 V
15 28 V
1 28 V
0 28 V
52 28 V
0 28 V
4 28 V
5 28 V
0 28 V
16 28 V
0 28 V
11 28 V
0 28 V
17 28 V
0 28 V
4 28 V
32 28 V
60 28 V
34 28 V
12 28 V
0 28 V
17 28 V
15 28 V
0 28 V
4 28 V
0 28 V
9 28 V
25 28 V
0 28 V
19 28 V
14 28 V
0 28 V
3 28 V
0 28 V
1 28 V
145 28 V
0 28 V
8 28 V
0 28 V
63 28 V
0 28 V
16 28 V
0 28 V
33 28 V
0 28 V
3 28 V
0 28 V
12 28 V
0 28 V
34 28 V
0 28 V
20 28 V
0 28 V
63 28 V
0 28 V
36 28 V
0 28 V
2 28 V
0 28 V
14 28 V
0 28 V
34 28 V
0 28 V
42 28 V
0 28 V
49 28 V
0 28 V
21 28 V
0 28 V
67 28 V
0 28 V
1.000 UP
stroke
2.000 UL
LT1
LTb
4039 833 M
(C2 to C1) Rshow
LT1
4171 833 M
591 0 V
1126 688 M
0 28 V
11 28 V
0 28 V
18 28 V
0 28 V
53 28 V
0 28 V
12 28 V
0 28 V
35 28 V
5 28 V
0 28 V
5 28 V
0 28 V
12 28 V
0 28 V
50 28 V
0 28 V
37 28 V
0 28 V
3 28 V
0 28 V
23 28 V
0 28 V
15 28 V
0 28 V
43 28 V
1 28 V
0 28 V
27 28 V
0 28 V
0 28 V
0 28 V
55 28 V
0 28 V
15 28 V
18 28 V
30 28 V
0 28 V
24 28 V
20 28 V
121 28 V
0 28 V
20 28 V
13 28 V
0 28 V
134 28 V
3 28 V
0 28 V
60 28 V
14 28 V
26 28 V
0 28 V
52 28 V
0 28 V
5 28 V
9 28 V
14 28 V
2 28 V
5 28 V
0 28 V
7 28 V
19 28 V
0 28 V
13 28 V
0 28 V
1 28 V
23 28 V
0 28 V
17 28 V
59 28 V
0 28 V
24 28 V
0 28 V
4 28 V
24 28 V
0 28 V
6 28 V
0 28 V
135 28 V
0 28 V
14 28 V
0 28 V
200 28 V
0 28 V
41 28 V
34 28 V
5 28 V
7 28 V
20 28 V
14 28 V
43 28 V
30 28 V
37 28 V
20 28 V
14 28 V
19 28 V
22 28 V
5 28 V
10 28 V
119 28 V
1126 688 Pls
1126 716 Pls
1137 744 Pls
1137 772 Pls
1155 800 Pls
1155 828 Pls
1208 856 Pls
1208 884 Pls
1220 912 Pls
1220 940 Pls
1255 968 Pls
1260 996 Pls
1260 1024 Pls
1265 1052 Pls
1265 1080 Pls
1277 1108 Pls
1277 1136 Pls
1327 1164 Pls
1327 1192 Pls
1364 1220 Pls
1364 1248 Pls
1367 1276 Pls
1367 1304 Pls
1390 1332 Pls
1390 1360 Pls
1405 1388 Pls
1405 1416 Pls
1448 1444 Pls
1449 1472 Pls
1449 1500 Pls
1476 1528 Pls
1476 1556 Pls
1476 1584 Pls
1476 1612 Pls
1531 1640 Pls
1531 1668 Pls
1546 1696 Pls
1564 1724 Pls
1594 1752 Pls
1594 1780 Pls
1618 1808 Pls
1638 1836 Pls
1759 1864 Pls
1759 1892 Pls
1779 1920 Pls
1792 1948 Pls
1792 1976 Pls
1926 2004 Pls
1929 2032 Pls
1929 2060 Pls
1989 2088 Pls
2003 2116 Pls
2029 2144 Pls
2029 2172 Pls
2081 2200 Pls
2081 2228 Pls
2086 2256 Pls
2095 2284 Pls
2109 2312 Pls
2111 2340 Pls
2116 2368 Pls
2116 2396 Pls
2123 2424 Pls
2142 2452 Pls
2142 2480 Pls
2155 2508 Pls
2155 2536 Pls
2156 2564 Pls
2179 2592 Pls
2179 2620 Pls
2196 2648 Pls
2255 2676 Pls
2255 2704 Pls
2279 2732 Pls
2279 2760 Pls
2283 2788 Pls
2307 2816 Pls
2307 2844 Pls
2313 2872 Pls
2313 2900 Pls
2448 2928 Pls
2448 2956 Pls
2462 2984 Pls
2462 3012 Pls
2662 3040 Pls
2662 3068 Pls
2703 3096 Pls
2737 3124 Pls
2742 3152 Pls
2749 3180 Pls
2769 3208 Pls
2783 3236 Pls
2826 3264 Pls
2856 3292 Pls
2893 3320 Pls
2913 3348 Pls
2927 3376 Pls
2946 3404 Pls
2968 3432 Pls
2973 3460 Pls
2983 3488 Pls
3102 3516 Pls
4466 833 Pls
1.000 UL
LTb
1122 3516 N
0 -2856 V
3904 0 V
0 2856 V
-3904 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
